    upstream  backend  {
              #ip_hash;
              server   localhost:8009 max_fails=2 fail_timeout=30s ;
    }

    server {
        listen       8008;

        charset utf-8;

       location = /auth/verification {
            internal;
            proxy_pass http://127.0.0.1:8011;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Host  $host:$server_port;
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Real-PORT $remote_port;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        #对 / 所有做负载均衡 + 反向代理
        location / {
            auth_request        /auth/verification;
            auth_request_set    $butterfly_location $upstream_http_location;
            auth_request_set    $butterfly_username $upstream_http_username;
            error_page 401    = /butterfly_401;
            proxy_redirect off;
            # 后端的 Web 服务器可以通过 X-Forwarded-For 获取用户真实 IP
            proxy_set_header Host               $host:$server_port;
            proxy_set_header  X-Real-IP         $remote_addr;
            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header  X-Username        $butterfly_username;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_pass        http://backend;
        }

        location  = /butterfly_401 {
            internal;
            default_type application/json;
            if ($butterfly_location) {
                return 401 '{"success":false,"message":"You are not authorized","data":{"redirect":"$butterfly_location"}}';
            }
        }

        # 首页处理
        location = / {
            root  /usr/share/nginx/html/templates;
            index index.html;
        }
        location = /index.html {
            root  /usr/share/nginx/html/templates;
        }
        location = /favicon.ico {
            root  /usr/share/nginx/html/templates;
        }

        #静态文件，nginx 自己处理，不去 backend 请求 butterfly
        location  ~* /static/ {
              root /usr/share/nginx/html;
              add_header Cache-Control no-store;
        }

        location /auth/ssologin {
            proxy_pass http://127.0.0.1:8011;
            # 这个 X-Target 是给认证完以后重定向的
            # proxy_set_header X-Target $request_uri;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Host  $host:$server_port;
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Real-PORT $remote_port;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location /nginx_status {
            access_log off;
            allow 192.168.10.0/24;
            deny all;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
